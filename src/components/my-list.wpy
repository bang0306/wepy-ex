<template>
  <view class="my-list">

    <repeat for="{{list}}">
      <view>{{item}}</view>
    </repeat>
    <view>sum: {{sum}}</view>
    <button @tap="onTap">自定义按钮</button>

    <view>{{title}}</view>
    <view>{{syncTitle}}</view>
    <view>{{twoWayTitle}}</view>
    
    <button @tap="emitEvent">emit some event</button>
    <view>data set by invoked my method: {{invokedData}}</view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class MyList extends wepy.component {
  props = {
    title: String,
    syncTitle: {
      type: String,
      default: 'null'
    },
    twoWayTitle: {
      type: String,
      default: 'nothing',
      // twoWay 代表子组件向父组件单向传递数据
      twoWay: true
    }
  }
  data = {
    list: [],
    invokedData: 'not invoked yet'
  }
  methods = {
    onTap () {
      console.log('tapped')
      this.list.push(this.list.length)
    },
    emitEvent () {
      this.$emit('some-event', 1, 2, 3, 4)
    },

    // 被其他组件/页面invoke的方法也要放在methods中
    setInvokedData (txt, val) {
      this.invokedData = 'haha' + txt + val * 2
    }
  }
  computed = {
    sum () {
      return this.list.reduce((prev, curr) => prev + curr, 0)
    }
  }

  watch = {
    // 可以监听计算属性
    sum (newValue, oldValue) {
      console.log(oldValue, '=>', newValue)
    }
  }

  events = {
    'broadcast-event': (...args) => {
      console.log(args)
    }
  }

  onLoad () {
    console.log('title', this.title)
    console.log('syncTitle', this.syncTitle)
    console.log('twoWayTitle', this.twoWayTitle)
    console.log('<==============>')

    this.twoWayTitle = 'childTitle'
    this.$apply()
    console.log('title', this.title)
    console.log('syncTitle', this.syncTitle)
    console.log('twoWayTitle', this.twoWayTitle)
    console.log('parentTitle', this.$parent.parentTitle)
    console.log('<==============>')

    this.$parent.parentTitle = 'parentTitle-changed'
    this.$parent.$apply()
    this.$apply()
    console.log('title', this.title)
    console.log('syncTitle', this.syncTitle)
    console.log('twoWayTitle', this.twoWayTitle)
    console.log('parentTitle', this.$parent.parentTitle)

    //     title parentTitle
    //     syncTitle parentTitle
    //     twoWayTitle parentTitle
    //     <==============>
    //     title parentTitle
    //     syncTitle childTitle
    //     twoWayTitle childTitle
    //     parentTitle childTitle
    //     <==============>
    //     title parentTitle
    //     syncTitle parentTitle-changed
    //     twoWayTitle childTitle
    //     parentTitle parentTitle-changed
  }
}
</script>
